From 26336776d3a6710fd91e14468a221b70ab960319 Mon Sep 17 00:00:00 2001
From: Shane Freeder <theboyetronic@gmail.com>
Date: Mon, 11 Feb 2019 19:16:13 +0000
Subject: [PATCH] Provide useful information on corrupted region files


diff --git a/src/main/java/net/minecraft/server/ChunkRegionLoader.java b/src/main/java/net/minecraft/server/ChunkRegionLoader.java
index 51df075b44..9c66f57e7c 100644
--- a/src/main/java/net/minecraft/server/ChunkRegionLoader.java
+++ b/src/main/java/net/minecraft/server/ChunkRegionLoader.java
@@ -50,14 +50,15 @@ public class ChunkRegionLoader implements IChunkLoader, IAsyncChunkSaver {
     final private ConcurrentLinkedQueue<QueuedChunk> queue = new ConcurrentLinkedQueue<>();
     // Paper end
 
-    private static final Logger a = LogManager.getLogger();
+    private static final Logger a = LogManager.getLogger(); private static final Logger LOGGER = a; // Paper - OBFHELPER
     private final it.unimi.dsi.fastutil.longs.Long2ObjectMap<Supplier<NBTTagCompound>> saveMap = it.unimi.dsi.fastutil.longs.Long2ObjectMaps.synchronize(new it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap<>()); // Paper
-    private final File c;
+    private final File c; public File getFile() { return c; } // Paper - OBFHELPER
     private final DataFixer d;
     private PersistentStructureLegacy e;
     // private boolean f; // CraftBukkit
     public final LongSet blacklist = new LongOpenHashSet();
     private static final double SAVE_QUEUE_TARGET_SIZE = 625; // Spigot
+    private static final boolean dropCorruptedChunks = Boolean.getBoolean("paper.dropCorruptedChunk"); // Paper
     // Paper start - support saving to an alternate directory
     private final File templateWorld;
     private final File actualWorld;
@@ -167,7 +168,16 @@ public class ChunkRegionLoader implements IChunkLoader, IAsyncChunkSaver {
         if (nbttagcompound != null) {
             return nbttagcompound;
         } else {
-            NBTTagCompound nbttagcompound1 = RegionFileCache.read(this.c, i, j);
+            // Paper start
+            NBTTagCompound nbttagcompound1;
+            try {
+                nbttagcompound1 = RegionFileCache.read(this.c, i, j);
+            } catch (Exception ex) {
+                LOGGER.warn(String.format("Failed to read region information for chunk %s(%d,%d) from region (%d,%d)", this.getFile().getName(), i, j, i >> 5, j >> 5)); // X, Z, Region X, Region Z
+                if (dropCorruptedChunks) return null; // attempt to run through it
+                throw ex;
+            }
+            // Paper end
 
             if (nbttagcompound1 == null) {
                 return null;
-- 
2.20.1

