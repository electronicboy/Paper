From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Jake Potrebic <jake.m.potrebic@gmail.com>
Date: Tue, 7 Jul 2020 10:53:22 -0700
Subject: [PATCH] More-World-API


diff --git a/src/main/java/org/bukkit/World.java b/src/main/java/org/bukkit/World.java
index 75c9225bd07b4c4b6dcd702c52294a7637eb6884..118394ac4956908571298d84afc75ef97e9b7e1e 100644
--- a/src/main/java/org/bukkit/World.java
+++ b/src/main/java/org/bukkit/World.java
@@ -3363,6 +3363,138 @@ public interface World extends PluginMessageRecipient, Metadatable {
     @Nullable
     public Location locateNearestStructure(@NotNull Location origin, @NotNull StructureType structureType, int radius, boolean findUnexplored);
 
+    // Paper start
+
+    /**
+     * Locates the nearest biome based on an origin, biome type, and radius to search
+     * Step defaults to 8
+     *
+     * @param origin Origin location
+     * @param biome Biome to find
+     * @param radius radius to search
+     * @return Location of biome or null if not found in specified radius
+     */
+    @Nullable
+    Location locateNearestBiome(@NotNull Location origin, @NotNull Biome biome, int radius);
+
+    /**
+     * Locates the nearest biome based on an origin, biome type, and radius to search
+     * and step
+     *
+     * @param origin Origin location
+     * @param biome Biome to find
+     * @param radius radius to search
+     * @param step Search step 1 would mean checking every block, 8 -> every 8th block
+     * @return Location of biome or null if not found in specified radius
+     */
+    @Nullable
+    Location locateNearestBiome(@NotNull Location origin, @NotNull Biome biome, int radius, int step);
+
+    /**
+     * Checks if the world:
+     * evaporates water
+     * dries sponges
+     * has lava spread faster and further
+     *
+     * @return true if ultrawarm, false if not
+     */
+    boolean isUltrawarm();
+
+    /**
+     * Checks if the world is natural
+     * If false, compasses will spin randomly in the world
+     * if true, nether portals will spawn zombified piglins
+     *
+     * @return true or false
+     */
+    boolean isNatural();
+
+    /**
+     * Checks if the world is shrunk
+     * where 1 block is 8 blocks in the overworld
+     * like the nether
+     *
+     * @return true if shrunk
+     */
+    boolean isShrunk();
+
+    /**
+     * Checks if the world has skylight access
+     *
+     * @return true if it has access
+     */
+    boolean hasSkylight();
+
+    /**
+     * Checks if the world has a bedrock ceiling
+     *
+     * @return true if it has a bedrock ceiling
+     */
+    boolean hasCeiling();
+
+    /**
+     * Checks if piglins will turn into zombified piglins
+     * in this world
+     *
+     * @return true if piglins will NOT transform
+     */
+    boolean isPiglinSafe();
+
+    /**
+     * Checks if beds work
+     *
+     * @return true if beds work
+     */
+    boolean doesBedWork();
+
+    /**
+     * Checks if respawn anchors work
+     *
+     * @return true if they work
+     */
+    boolean doesRespawnAnchorWork();
+
+    /**
+     * Checks if this world supports raids
+     *
+     * @return true if supported
+     */
+    boolean hasRaids();
+
+    /**
+     * Checks if this world has a fixed time
+     *
+     * @return true if fixed
+     */
+    boolean isFixedTime();
+
+    /**
+     * Gets the collection of materials that burn
+     * infinitely in this world
+     *
+     * @return the infinite burn materials
+     */
+    @NotNull
+    Collection<Material> getInfiniburn();
+
+    /**
+     * Broadcast a message to all players
+     * in this world
+     *
+     * @param message Message to broadcast
+     */
+    void broadcastMessage(@NotNull String message);
+
+    /**
+     * Broadcast a message to all players
+     * with a permission in a world
+     *
+     * @param message Message to broadcast
+     * @param permission Permission to check
+     */
+    void broadcastMessage(@NotNull String message, @NotNull String permission);
+    // Paper end
+
     // Spigot start
     /**
      * Returns the view distance used for this world.
